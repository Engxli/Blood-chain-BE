name: CI Workflow

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Access Repository
        uses: actions/checkout@v3

      - name: Setup Python 3.9
        uses: actions/setup-python@v3
        with:
          python-version: 3.9.13

      - name: Install poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Load cached venv
        id: poetry-deps
        uses: actions/cache@v3
        with:
          path: .venv
          key: cache-v1-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies with poetry
        if: steps.poetry-deps.outputs.cache-hit != 'true'
        run: poetry install --no-interaction

      - name: Lint with isort
        run: poetry run isort --check-only .

      - name: Lint with black
        run: poetry run black --check .

      - name: Lint with mypy
        run: poetry run mypy .

      - name: Lint with pylint
        run: poetry run pylint **/*.py

      - name: Test with pytest
        run: poetry run pytest --cov-report=xml

      - name: Upload coverage
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          fail_ci_if_error: true
